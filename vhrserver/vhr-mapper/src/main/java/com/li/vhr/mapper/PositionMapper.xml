<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.li.vhr.mapper.PositionMapper" >

  <!--自定义结果映射-->
  <!--id作为唯一标识符，名字可以任取，最好见名知意来取;type后面写类的全限定类名或者别名-->
  <resultMap id="BaseResultMap" type="com.li.vhr.model.Position" >
    <!--id用来描述主键;column是数据库查询出来的列名;property是对象中的属性;jdbcType:指定数据库中列的类型-->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="enabled" property="enabled" jdbcType="BIT" />
  </resultMap>

  <!--sql查询过程中，使用select*会降低查询效率，可以用如下的sql片段解决-->
  <sql id="Base_Column_List" >
    id, name, createDate, enabled
  </sql>

  <!--使用自定义的resultMap结果集映射-->
  <select id="getAllPositions" resultMap="BaseResultMap">
    select * from position;
  </select>

  <!--<include refid="Base_Column_List" />引用上面写的sql片段，代替*，用于提高查询效率-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from position
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from position
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.li.vhr.model.Position" >
    insert into position (id, name, createDate, 
      enabled)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{enabled,jdbcType=BIT})
  </insert>

  <!--动态SQL之if-->
  <!--suffixOverrides=","中的逗号会被移除，用suffix=")"中的)来替换-->
  <!--如果只插入了id，那么会变成insert into position (id,此时trim会删除逗号用)来替换逗号-->
  <insert id="insertSelective" parameterType="com.li.vhr.model.Position" >
    insert into position
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createDate != null" >
        createDate,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>

    <!--类比foreach循环理解-->
    <delete id="deletePositionsByIds">
      delete from position where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
          #{id}
        </foreach>
    </delete>

  <!--set元素会动态的在首行添加Set关键字，并且会删除多余的逗号-->
  <update id="updateByPrimaryKeySelective" parameterType="com.li.vhr.model.Position" >
    update position
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.li.vhr.model.Position" >
    update position
    set name = #{name,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>